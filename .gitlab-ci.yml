variables:
  Node_IMAGE_NAME: node:18-alpine3.16
  SnQIMAGE_NAME: "neokailthas/snqtechnology"
  SnQIMAGE_TAG: "snqportal"
  PORT: 5000 
  
stages:
  - test
  - build
  - deploy

test:
  stage: test
  image: $Node_IMAGE_NAME
  before_script:
    - mkdir ssl
    - echo -e $snqtechnologycrt >> ssl/snqtechnology.crt
    - echo -e $snqtechnologykey >> ssl/snqtechnology.key
    - npm install
  script:
    - npm test

build:
  stage: build 
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - export DOCKER_HOST=unix:///var/run/docker.sock
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS" "$CI_REGISTRY"
  script:
    - mkdir ssl
    - echo -e $snqtechnologycrt >> ssl/snqtechnology.crt
    - echo -e $snqtechnologykey >> ssl/snqtechnology.key
    - docker build -t $SnQIMAGE_NAME:$SnQIMAGE_TAG .
    - docker push $SnQIMAGE_NAME:$SnQIMAGE_TAG

deploy:
  stage: deploy
  timeout: 5 minutes
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY neocool@dockerServer "      
      docker login -u '$REGISTRY_USER' -p '$REGISTRY_PASS' && 
      docker ps -aq | xargs docker stop | xargs docker rm &&     
      docker run -e connectionString='$connectionString' -e JWT_SECRET='$JWT_SECRET' -p $PORT:$PORT $SnQIMAGE_NAME:$SnQIMAGE_TAG npm test "